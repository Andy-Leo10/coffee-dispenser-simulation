# This Docker image will contain everything necessary 
# for starting the Gazebo simulation in ROS2

# Start from ROS Humble desktop image
FROM osrf/ros:humble-desktop

# Use ARG to set DEBIAN_FRONTEND to noninteractive only during the build
ARG DEBIAN_FRONTEND=noninteractive

# Install necessary packages including apt-utils
RUN apt-get update && apt-get install -y \
    apt-utils \
    git \
    build-essential \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-rosinstall-generator \
    python3-vcstool \
    wget \
    # Add other necessary packages here
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# It's generally a good idea to run rosdep update as a non-root user,
# but in Docker, we typically ignore this warning.
RUN rosdep update

# clone yolov5 repo in / directory
RUN git clone https://github.com/ultralytics/yolov5.git /yolov5

# Create an overlay Colcon workspace
RUN /bin/bash -c "source /opt/ros/humble/setup.bash \
    && mkdir -p /ros2_ws/src \
    && cd /ros2_ws \
    && colcon build --symlink-install"
COPY /robot_ur3e_perception/ /ros2_ws/src/robot_ur3e_perception/
COPY /robot_ur3e_yolov5/ /ros2_ws/src/robot_ur3e_yolov5/

# Install dependencies
RUN /bin/bash -c "source /opt/ros/humble/setup.bash \
    && cd /ros2_ws/src/robot_ur3e_perception; \
    python3 -m pip install torch torchvision; \
    python3 -m pip install -r requirements.txt"
    
# Attempt to install dependencies, skipping the problematic package
RUN apt-get update && apt-get upgrade -y && \
    cd /ros2_ws && \
    rosdep install --from-paths src --ignore-src -r -y || true

# Build the workspace
RUN /bin/bash -c "source /opt/ros/humble/setup.bash \
    && cd /ros2_ws \
    && colcon build --symlink-install \
    && source /ros2_ws/install/setup.bash \
    && echo 'source /ros2_ws/install/setup.bash' >> ~/.bashrc"

# Set up the work directory
WORKDIR /ros2_ws
# Set up the entrypoint
# CMD /bin/bash -c "source /ros2_ws/install/setup.bash \
#     && cd /home/user/ros2_ws/src/robot_ur3e_perception; source venv/bin/activate
#     && ros2 launch robot_ur3e_perception alt_yolov5_tf.launch.py